
<h1 class="titlepoll">RESPONSES</h1>
<h2 class="titlepoll" style="font-size: 25px"><%= @poll.title %></h2>

<div class="project-description-options">
  <p><%= @poll.description %></p>
</div>

<div class="responses-container">
  <ul style="padding-bottom: 180px">
    <% @poll.answers.each do |answer| %>
      <li class="poll-answer-votes position-relative">
        <span class="vote-percentage-bar" style="width: <%= answer.votes_percentage %>%;"></span>
        <%= link_to answer_votes_path(answer.id), remote: true, method: :post, 'data-turbolinks-scroll': false do %>
          <div class="answer-vote-percentage">
            <p><%= answer.title.upcase_first %> (<%= pluralize(answer.votes_count, "vote") %>)</p>
            <p><%= answer.votes_percentage.nan? ? "0" : answer.votes_percentage.to_i %> %</p>
          </div>
        <% end %>
      </li>


      <p style="font-weight:bold; font-size: 17px">Respondents â–¾</p>

      <ul>
        <% if answer.votes.empty? %>
          <li>
            <div class="respondent-info">
              <p>No votes for this answer</p>
            </div>
          </li>
        <% end %>
        <% answer.votes.each do |vote| %>
          <li>
            <div class="respondent-info">
              <% if vote.user_id %>
                <div class="initial-background" style="background-color: <%= avatar_bg_color(vote.user.name) %>">
                  <span class="initial"><%= vote.user.initials.upcase_first %></span>
                </div>
                <p><%= vote.user.name.upcase_first %></p>
              <% else %>
                <div class="initial-background" style="background-color: <%= avatar_bg_color(vote.name) %>">
                  <span class="initial"><%= vote.name.first.upcase_first %></span>
                </div>
                <p><%= vote.name.upcase_first %></p>
              <% end %>
            </div>
          </li>
        <% end %>
      </ul>
    <% end %>
  </ul>
</div>


<script>
  // const setBackgroundColor = () => {
  //   const avatars = document.querySelectorAll('.initial-background')
  //   avatars.forEach(element => {
  //       function random_bg_color() {
  //         var x = Math.floor(Math.random() * 256);
  //         var y = Math.floor(Math.random() * 256);
  //         var z = Math.floor(Math.random() * 256);
  //         var bgColor = "rgb(" + x + "," + y + "," + z + ")";
  //         console.log(bgColor);
  //         element.style.backgroundColor = bgColor
  //       }
  //       random_bg_color();
  //   });
  // };
  // window.onload = setBackgroundColor;
</script>
